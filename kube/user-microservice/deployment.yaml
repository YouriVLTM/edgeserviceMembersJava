apiVersion: v1
kind: Secret
metadata:
  name: user-service-secret
type: Opaque
data:
  POSTGRES_DB_HOST: dXNlci1zZXJ2aWNlLXBvc3RncmVzc3Fs #user-service-postgressql
  POSTGRES_DB_NAME: YWR2YW5jZWRfcHJvZ3JhbWluZ19wcm9qZWN0X3VzZXJfREI= #advanced_programing_project_user_DB
  POSTGRES_DB: YWR2YW5jZWRfcHJvZ3JhbWluZ19wcm9qZWN0X3VzZXJfREI= #advanced_programing_project_user_DB
  POSTGRES_USER: cG9zdGdyZXM= #postgres
  POSTGRES_PASSWORD: cG9zdGdyZXM=
  POSTGRES_DB_PORT: NTQzMg== #5432
  POSTGRES_DB_USERNAME: cG9zdGdyZXM=
  POSTGRES_DB_PASSWORD: cG9zdGdyZXM=

---
apiVersion: v1                    # API version
kind: Service                     # Type of kubernetes resource
metadata:
  name: user-service-postgressql      # Name of the service
  labels:                         # Labels that will be applied to the service
    app: user-service
spec:
  ports:
    - port: 5432
  selector:                       # Selects any Pod with labels `app=comment-service,tier=mongo`
    app: user-service
    tier: postgres
---
apiVersion: apps/v1
kind: Deployment                    # Type of the kubernetes resource
metadata:
  name: user-service-postgressql-deployment           # Name of the deployment
  labels:                           # Labels applied to this deployment
    app: user-service
spec:
  selector:
    matchLabels:                    # This deployment applies to the Pods matching the specified labels
      app: user-service
      tier: postgres
  strategy:
    type: Recreate
  template:                         # Template for the Pods in this deployment
    metadata:
      labels:                       # Labels to be applied to the Pods in this deployment
        app: user-service
        tier: postgres
    spec:                           # The spec for the containers that will be run inside the Pods in this deployment
      containers:
        - image: postgres                # The container image
          name: postgres
          ports:
            - containerPort: 5432        # The port that the container exposes
              name: postgres
          env:                    # Environment variables supplied to the Pod
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: user-service-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: user-service-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-service-secret
                  key: POSTGRES_PASSWORD
---
apiVersion: v1                   # API version
kind: Service                    # Type of the kubernetes resource
metadata:
  name: user-service-server    # Name of the service
  labels:                        # Labels that will be applied to this service
    app: user-service-server
spec:
  type: NodePort                 # The service will be exposed by opening a Port on each node and proxying it. Allowing connections from outside the cluster
  selector:
    app: user-service-server   # The service exposes Pods with label `app=comment-service-server`
  ports:                         # Forward incoming connections on port 8053 to the target port 8053
    - name: http
      port: 8051
      targetPort: 8051
---
apiVersion: apps/v1           # API version
kind: Deployment              # Type of kubernetes resource
metadata:
  name: user-service-server-deployment    # Name of the kubernetes resource
  labels:                     # Labels that will be applied to this resource
    app: user-service-server
spec:
  replicas: 1                 # No. of replicas/pods to run in this deployment
  selector:
    matchLabels:              # The deployment applies to any pods mayching the specified labels
      app: user-service-server
  template:                   # Template for creating the pods in this deployment
    metadata:
      labels:                 # Labels that will be applied to each Pod in this deployment
        app: user-service-server
    spec:                     # Spec for the containers that will be run in the Pods
      containers:
        - name: user-service-server
          image: r0703028/users-ex
          imagePullPolicy: Always #IfNotPresent
          ports:
            - name: http
              containerPort: 8051 # The port that the container exposes
          resources:
            limits:
              cpu: 0.2
              memory: "200Mi"
          env:                    # Environment variables supplied to the Pod
            - name: POSTGRES_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: user-service-secret
                  key: POSTGRES_DB_HOST
            - name: POSTGRES_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: user-service-secret
                  key: POSTGRES_DB_PORT
            - name: POSTGRES_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: user-service-secret
                  key: POSTGRES_DB_NAME
            - name: POSTGRES_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: user-service-secret
                  key: POSTGRES_DB_USERNAME
            - name: POSTGRES_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-service-secret
                  key: POSTGRES_DB_PASSWORD
